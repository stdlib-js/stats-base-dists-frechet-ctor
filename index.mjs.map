{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nimport defineProperty from '@stdlib/utils-define-property';\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils-define-nonenumerable-read-only-accessor';\nimport { isPrimitive as isPositive } from '@stdlib/assert-is-positive-number';\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number';\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport entropy from '@stdlib/stats-base-dists-frechet-entropy';\nimport kurtosis from '@stdlib/stats-base-dists-frechet-kurtosis';\nimport mean from '@stdlib/stats-base-dists-frechet-mean';\nimport median from '@stdlib/stats-base-dists-frechet-median';\nimport mode from '@stdlib/stats-base-dists-frechet-mode';\nimport skewness from '@stdlib/stats-base-dists-frechet-skewness';\nimport stdev from '@stdlib/stats-base-dists-frechet-stdev';\nimport variance from '@stdlib/stats-base-dists-frechet-variance';\nimport cdf from '@stdlib/stats-base-dists-frechet-cdf';\nimport logcdf from '@stdlib/stats-base-dists-frechet-logcdf';\nimport logpdf from '@stdlib/stats-base-dists-frechet-logpdf';\nimport pdf from '@stdlib/stats-base-dists-frechet-pdf';\nimport quantile from '@stdlib/stats-base-dists-frechet-quantile';\nimport format from '@stdlib/string-format';\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates the cumulative distribution function (CDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {Probability} evaluated CDF\n*/\nfunction frechetCDF( x ) {\n\treturn cdf( x, this.alpha, this.s, this.m );\n}\n\n/**\n* Evaluates the natural logarithm of the cumulative distribution function (CDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated logCDF\n*/\nfunction frechetLogCDF( x ) {\n\treturn logcdf( x, this.alpha, this.s, this.m );\n}\n\n/**\n* Evaluates the natural logarithm of the probability density function (PDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated logPDF\n*/\nfunction frechetLogPDF( x ) {\n\treturn logpdf( x, this.alpha, this.s, this.m );\n}\n\n/**\n* Evaluates the probability density function (PDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated PDF\n*/\nfunction frechetPDF( x ) {\n\treturn pdf( x, this.alpha, this.s, this.m );\n}\n\n/**\n* Evaluates the quantile function.\n*\n* @private\n* @param {Probability} p - input probability\n* @returns {number} evaluated quantile function\n*/\nfunction frechetQuantile( p ) {\n\treturn quantile( p, this.alpha, this.s, this.m );\n}\n\n\n// MAIN //\n\n/**\n* Fréchet distribution constructor.\n*\n* @constructor\n* @param {number} [alpha=0.0] - shape parameter\n* @param {number} [s=1.0] - scale parameter\n* @param {number} [m=0.0] - location parameter\n* @throws {TypeError} `alpha` must be a positive number\n* @throws {TypeError} `s` must be a positive number\n* @returns {Frechet} distribution instance\n*\n* @example\n* var frechet = new Frechet( 1.0, 1.0, 0.25 );\n*\n* var y = frechet.cdf( 0.8 );\n* // returns ~0.162\n*\n* var mu = frechet.mean;\n* // returns Infinity\n*/\nfunction Frechet() {\n\tvar alpha;\n\tvar s;\n\tvar m;\n\tif ( !(this instanceof Frechet) ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn new Frechet();\n\t\t}\n\t\treturn new Frechet( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\n\t}\n\tif ( arguments.length ) {\n\t\talpha = arguments[ 0 ];\n\t\ts = arguments[ 1 ];\n\t\tm = arguments[ 2 ];\n\t\tif ( !isPositive( alpha ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Shape parameter must be a positive number. Value: `%s`.', alpha ) );\n\t\t}\n\t\tif ( !isPositive( s ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Scale parameter must be a number. Value: `%s`.', s ) );\n\t\t}\n\t\tif ( !isNumber( m ) || isnan( m ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Location parameter must be a number. Value: `%s`.', m ) );\n\t\t}\n\t} else {\n\t\talpha = 1.0;\n\t\ts = 1.0;\n\t\tm = 0.0;\n\t}\n\tdefineProperty( this, 'alpha', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() {\n\t\t\treturn alpha;\n\t\t},\n\t\t'set': function set( value ) {\n\t\t\tif ( !isPositive( value ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid assignment. Must be a positive number. Value: `%s`.', value ) );\n\t\t\t}\n\t\t\talpha = value;\n\t\t}\n\t});\n\tdefineProperty( this, 's', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() {\n\t\t\treturn s;\n\t\t},\n\t\t'set': function set( value ) {\n\t\t\tif ( !isPositive( value ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid assignment. Must be a positive number. Value: `%s`.', value ) );\n\t\t\t}\n\t\t\ts = value;\n\t\t}\n\t});\n\tdefineProperty( this, 'm', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() {\n\t\t\treturn m;\n\t\t},\n\t\t'set': function set( value ) {\n\t\t\tif ( !isNumber( value ) || isnan( value ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid assignment. Must be a number. Value: `%s`.', value ) );\n\t\t\t}\n\t\t\tm = value;\n\t\t}\n\t});\n\treturn this;\n}\n\n/**\n* Fréchet distribution differential entropy.\n*\n* @name entropy\n* @memberof Frechet.prototype\n* @type {number}\n* @see [differential entropy]{@link https://en.wikipedia.org/wiki/Entropy_%28information_theory%29}\n*\n* @example\n* var frechet = new Frechet( 4.0, 12.0, 2.0 );\n*\n* var v = frechet.entropy;\n* // returns ~2.82\n*/\nsetReadOnlyAccessor( Frechet.prototype, 'entropy', function get() {\n\treturn entropy( this.alpha, this.s, this.m );\n});\n\n/**\n* Fréchet distribution excess kurtosis.\n*\n* @name kurtosis\n* @memberof Frechet.prototype\n* @type {number}\n* @see [kurtosis]{@link https://en.wikipedia.org/wiki/Kurtosis}\n*\n* @example\n* var frechet = new Frechet( 4.0, 12.0, 2.0 );\n*\n* var v = frechet.kurtosis;\n* // returns Infinity\n*/\nsetReadOnlyAccessor( Frechet.prototype, 'kurtosis', function get() {\n\treturn kurtosis( this.alpha, this.s, this.m );\n});\n\n/**\n* Fréchet distribution expected value.\n*\n* @name mean\n* @memberof Frechet.prototype\n* @type {number}\n* @see [expected value]{@link https://en.wikipedia.org/wiki/Expected_value}\n*\n* @example\n* var frechet = new Frechet( 4.0, 12.0, 2.0 );\n*\n* var v = frechet.mean;\n* // returns ~16.705\n*/\nsetReadOnlyAccessor( Frechet.prototype, 'mean', function get() {\n\treturn mean( this.alpha, this.s, this.m );\n});\n\n/**\n* Fréchet distribution median.\n*\n* @name median\n* @memberof Frechet.prototype\n* @type {number}\n* @see [median]{@link https://en.wikipedia.org/wiki/Median}\n*\n* @example\n* var frechet = new Frechet( 4.0, 12.0, 2.0 );\n*\n* var v = frechet.median;\n* // returns ~15.151\n*/\nsetReadOnlyAccessor( Frechet.prototype, 'median', function get() {\n\treturn median( this.alpha, this.s, this.m );\n});\n\n/**\n* Fréchet distribution mode.\n*\n* @name mode\n* @memberof Frechet.prototype\n* @type {number}\n* @see [mode]{@link https://en.wikipedia.org/wiki/Mode_%28statistics%29}\n*\n* @example\n* var frechet = new Frechet( 4.0, 12.0, 2.0 );\n*\n* var v = frechet.mode;\n* // returns ~13.349\n*/\nsetReadOnlyAccessor( Frechet.prototype, 'mode', function get() {\n\treturn mode( this.alpha, this.s, this.m );\n});\n\n/**\n* Fréchet distribution skewness.\n*\n* @name skewness\n* @memberof Frechet.prototype\n* @type {number}\n* @see [skewness]{@link https://en.wikipedia.org/wiki/Skewness}\n*\n* @example\n* var frechet = new Frechet( 4.0, 12.0, 2.0 );\n*\n* var v = frechet.skewness;\n* // returns ~5.605\n*/\nsetReadOnlyAccessor( Frechet.prototype, 'skewness', function get() {\n\treturn skewness( this.alpha, this.s, this.m );\n});\n\n/**\n* Fréchet distribution standard deviation.\n*\n* @name stdev\n* @memberof Frechet.prototype\n* @type {PositiveNumber}\n* @see [standard deviation]{@link https://en.wikipedia.org/wiki/Standard_deviation}\n*\n* @example\n* var frechet = new Frechet( 4.0, 12.0, 2.0 );\n*\n* var v = frechet.stdev;\n* // returns ~6.245\n*/\nsetReadOnlyAccessor( Frechet.prototype, 'stdev', function get() {\n\treturn stdev( this.alpha, this.s, this.m );\n});\n\n/**\n* Fréchet distribution variance.\n*\n* @name variance\n* @memberof Frechet.prototype\n* @type {PositiveNumber}\n* @see [variance]{@link https://en.wikipedia.org/wiki/Variance}\n*\n* @example\n* var frechet = new Frechet( 4.0, 12.0, 2.0 );\n*\n* var v = frechet.variance;\n* // returns ~38.996\n*/\nsetReadOnlyAccessor( Frechet.prototype, 'variance', function get() {\n\treturn variance( this.alpha, this.s, this.m );\n});\n\n/**\n* Evaluates the cumulative distribution function (CDF).\n*\n* @name cdf\n* @memberof Frechet.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated CDF\n* @see [cdf]{@link https://en.wikipedia.org/wiki/Cumulative_distribution_function}\n*\n* @example\n* var frechet = new Frechet( 2.0, 4.0, 3.0 );\n*\n* var v = frechet.cdf( 12.0 );\n* // returns ~0.821\n*/\nsetReadOnly( Frechet.prototype, 'cdf', frechetCDF );\n\n/**\n* Evaluates the natural logarithm of the cumulative distribution function (CDF).\n*\n* @name logcdf\n* @memberof Frechet.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated logCDF\n* @see [cdf]{@link https://en.wikipedia.org/wiki/Cumulative_distribution_function}\n*\n* @example\n* var frechet = new Frechet( 2.0, 4.0, 3.0 );\n*\n* var v = frechet.logcdf( 12.0 );\n* // returns ~-0.1975\n*/\nsetReadOnly( Frechet.prototype, 'logcdf', frechetLogCDF );\n\n/**\n* Evaluates the natural logarithm of the probability density function (PDF).\n*\n* @name logpdf\n* @memberof Frechet.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated logPDF\n* @see [pdf]{@link https://en.wikipedia.org/wiki/Probability_density_function}\n*\n* @example\n* var frechet = new Frechet( 2.0, 4.0, 3.0 );\n*\n* var v = frechet.logpdf( 2.0 );\n* // returns -Infinity\n*/\nsetReadOnly( Frechet.prototype, 'logpdf', frechetLogPDF );\n\n/**\n* Evaluates the probability density function (PDF).\n*\n* @name pdf\n* @memberof Frechet.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated PDF\n* @see [pdf]{@link https://en.wikipedia.org/wiki/Probability_density_function}\n*\n* @example\n* var frechet = new Frechet( 2.0, 4.0, 3.0 );\n*\n* var v = frechet.pdf( 5.5 );\n* // returns ~0.158\n*/\nsetReadOnly( Frechet.prototype, 'pdf', frechetPDF );\n\n/**\n* Evaluates the quantile function.\n*\n* @name quantile\n* @memberof Frechet.prototype\n* @type {Function}\n* @param {Probability} p - input probability\n* @returns {number} evaluated quantile function\n* @see [quantile function]{@link https://en.wikipedia.org/wiki/Quantile_function}\n*\n* @example\n* var frechet = new Frechet( 2.0, 4.0, 3.0 );\n*\n* var v = frechet.quantile( 0.5 );\n* // returns ~7.804\n*/\nsetReadOnly( Frechet.prototype, 'quantile', frechetQuantile );\n\n\n// EXPORTS //\n\nexport default Frechet;\n"],"names":["Frechet","alpha","s","m","this","arguments","length","isPositive","TypeError","format","isNumber","isnan","defineProperty","configurable","enumerable","get","set","value","setReadOnlyAccessor","prototype","entropy","kurtosis","mean","median","mode","skewness","stdev","variance","setReadOnly","x","cdf","logcdf","logpdf","pdf","p","quantile"],"mappings":"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"}